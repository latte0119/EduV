{"version":3,"sources":["header.jsx","inputForm.jsx","contestTable.jsx","App.js","index.js"],"names":["Header","className","React","Component","props","useState","inputText","setInputText","type","onChange","e","target","value","onClick","setUsername","Color","T","Map","contestList","contest","id","Array","i","href","text","bgcolor","problemList","problem","contestId","index","charCodeAt","name","submissionList","submission","undefined","content","verdict","key","arr","push","String","fromCharCode","map","split","padStart","ht","fetchContestInfometion","a","fetch","then","response","json","result","filter","test","sort","b","startTimeSeconds","s","Set","c","add","problems","length","has","App","state","isLoaded","username","bind","status","setState","res","this","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57db08ed.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Header extends React.Component{\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<header className=\"Header\">\r\n\t\t\t\t<h1>EduV</h1>\r\n\t\t\t</header>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Header;","import React,{useState} from 'react';\r\n\r\nexport default props=>{\r\n\tconst [inputText,setInputText]=useState(\"\");\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tonChange={(e)=>{setInputText(e.target.value)}}\r\n\t\t\t\tvalue={inputText}\r\n\t\t\t\tclassName=\"inputtext\"\r\n\t\t\t/>\r\n\t\t\t<button onClick={()=>{props.setUsername(inputText)}}>exec</button>\r\n\t\t</div>\r\n\t);\r\n}","import React from 'react';\r\n\r\nconst Color={\r\n\taccepted:\"#006400\",\r\n\tincorrect:\"#696969\"\r\n};\r\n\r\nexport default props=>{\r\n\tlet T=new Map();\r\n\tfor(const contest of props.contestList){\r\n\t\tT[contest.id]=new Array(9);\r\n\t\tfor(let i=0;i<9;i++)T[contest.id][i]={\r\n\t\t\thref:``,\r\n\t\t\ttext:\"\",\r\n\t\t\tbgcolor:\"\"\r\n\t\t};\r\n\t}\r\n\r\n\tfor(const problem of props.problemList){\r\n\t\tT[problem.contestId][problem.index.charCodeAt(0)-65]={\r\n\t\t\thref:`https://codeforces.com/contest/${problem.contestId}/problem/${problem.index}`,\r\n\t\t\ttext:problem.index+\". \"+problem.name,\r\n\t\t\tbgcolor:\"\"\r\n\t\t};\r\n\t}\r\n\r\n\tfor(const submission of props.submissionList){\r\n\t\tif(T[submission.contestId]===undefined)continue;\r\n\t\tlet content=T[submission.contestId][submission.problem.index.charCodeAt(0)-65];\r\n\t\t\r\n\t\tif(submission.verdict===\"OK\"){\r\n\t\t\tcontent.bgcolor=Color.accepted;\r\n\t\t}\r\n\t\telse if(content.bgcolor===\"\"){\r\n\t\t\tcontent.bgcolor=Color.incorrect;\r\n\t\t}\r\n\t}\r\n\r\n\t\t\r\n\r\n\treturn (\r\n\t\t<table>\r\n          <thead>\r\n            <tr key=\"top\">\r\n              <th><p>Contest</p></th>\r\n              {\r\n\t\t\t\t(()=>{\r\n\t\t\t\t\tlet arr=[];\r\n\t\t\t\t\tfor(let i=0;i<9;i++){\r\n\t\t\t\t\t\tarr.push(<th><p>{String.fromCharCode(65+i)}</p></th>);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn arr;\r\n\t\t\t\t})()\r\n\t\t\t  }\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n\t\t\t\tprops.contestList.map(contest=>{\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<tr key={contest.id}>\r\n\t\t\t\t\t\t\t<th><a href={`https://codeforces.com/contest/${contest.id}`}><p>{\"ECR\"+contest.name.split(' ')[3].padStart(3,'0')}</p></a></th>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tT[contest.id].map(ht=>{\r\n\t\t\t\t\t\t\t\t\treturn <td bgcolor={ht.bgcolor}><a href={ht.href}><p>{ht.text}</p></a></td>;\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n          </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\n","import React from 'react';\n\nimport InputForm from './inputForm';\nimport ContestTable from './contestTable';\nimport CommonLoading from 'react-loadingg/lib/CommonLoading';\n\nconst fetchContestInfometion=async()=>{\n  const contestList=\n  await fetch('https://codeforces.com/api/contest.list')\n  .then(response=>response.json())\n  .then(json=>{\n    return json.result\n    .filter(contest=>/Educational\\sCodeforces\\sRound/.test(contest.name))\n    .sort((a,b)=>a.startTimeSeconds<b.startTimeSeconds?-1:1);\n  });\n\n  let s=new Set();\n  for(const  c of contestList)s.add(c.id);\n\n  const problemList=\n  await fetch('https://codeforces.com/api/problemset.problems')\n  .then(response=>response.json())\n  .then(json=>{\n    return json.result.problems\n    .filter(problem=>{\n      if(problem.index.length>=2&&problem.index[1]!=='2')return false;\n      return s.has(problem.contestId);\n    });\n  });\n\n  return {contestList:contestList,problemList:problemList};\n};\n\n\nclass App extends React.Component{\n    constructor(){\n      super();\n      this.state={isLoaded:false,contestList:[],problemList:[],submissionList:[],username:\"\"};\n\n      this.setUsername=this.setUsername.bind(this);\n    }\n\n    setUsername(username){\n      fetch(`https://codeforces.com/api/user.status?handle=${username}`)\n      .then(response=>response.json())\n      .then(json=>{\n        if(json.status===\"OK\"){\n          this.setState(\n            {\n              ...this.state,\n              username:username,\n              submissionList:json.result\n            }\n          );\n        }\n        else{\n          this.setState(\n            {\n              ...this.state,\n              username:\"\",\n              submissionList:[]\n            }\n          );\n        }\n      });\n    }\n\n    componentDidMount(){\n      fetchContestInfometion()\n      .then(res=>{\n        this.setState({\n          isLoaded:true,\n          contestList:res.contestList,\n          problemList:res.problemList\n        });\n      });\n    }\n\n    render(){\n      if(this.state.isLoaded===false){\n       // const style = { position: \"fixed\", top: 0, left: 0, width: \"100%\", height: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" };\n        return (\n          <div>\n            <CommonLoading/>\n         </div>\n        );\n      }\n      \n\n      return(\n        <div>\n          <header className=\"InputForm\">\n            <InputForm setUsername={this.setUsername}/>\n          </header>\n          <div className=\"main\">\n          <ContestTable key=\"contestTable\" contestList={this.state.contestList} problemList={this.state.problemList} submissionList={this.state.submissionList}/>\n          </div>\n        </div>\n      );\n    }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\n\nimport Header from './header';\nimport App from './App';\n\nReactDOM.render(\n  <div>\n    <Header/>\n    <App/>\n  </div>,\n  document.getElementById('root')\n);"],"sourceRoot":""}